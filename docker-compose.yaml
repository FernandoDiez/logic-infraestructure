version: '3.8'
services:


  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      # - acme:/etc/acme.sh
    # labels:
    #   - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - logistics-network


  logistics-mongo:
    image: mongo
    container_name: logistics-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - logistics-mongo-data:/data/db
      - logistics-mongo-config:/data/configdb
    networks:
      - logistics-network

  mongo-express:
    image: mongo-express
    container_name: logistics-mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: logistics-mongo
    networks:
      - logistics-network
    depends_on:
      - logistics-mongo

  logistics-login:
    image: logistics-login
    container_name: logistics-login
    restart: always
    environment:
      - VIRTUAL_HOST=logistics.com
    volumes:
      - ./logistics-login:/app
      - ./logistics-login/node_modules:/app/node_modules
      - ./logistics-login/.next:/app/.next
    # ports:
    #   - 5000:3000
    expose:
      - "3000"
    networks:
      - logistics-network
    depends_on:
      - nginx-proxy

  logistics-carriers:
    image: logistics-carriers
    container_name: logistics-carriers
    restart: always
    environment:
      - VIRTUAL_HOST=carriers.logistics.com
    volumes:
      - ./logistics-carriers:/app
      - ./logistics-carriers/node_modules:/app/node_modules
      - ./logistics-carriers/.next:/app/.next
    # ports:
    #   - 5001:3000
    expose:
      - "3000"
    networks:
      - logistics-network
    depends_on:
      - nginx-proxy

  logistics-customers:
    image: logistics-customers
    container_name: logistics-customers
    restart: always
    environment:
      - VIRTUAL_HOST=customers.logistics.com
    volumes:
      - ./logistics-customers:/app
      - ./logistics-customers/node_modules:/app/node_modules
      - ./logistics-customers/.next:/app/.next
    # ports:
    #   - 5002:3000
    expose:
      - "3000"
    networks:
      - logistics-network
    depends_on:
      - nginx-proxy

  logistics-distributors:
    image: logistics-distributors
    container_name: logistics-distributors
    restart: always
    environment:
      - VIRTUAL_HOST=distributors.logistics.com
    volumes:
      - ./logistics-distributors:/app
      - ./logistics-distributors/node_modules:/app/node_modules
      - ./logistics-distributors/.next:/app/.next
    # ports:
    #   - 5003:3000
    expose:
      - "3000"
    networks:
      - logistics-network
    depends_on:
      - nginx-proxy

networks:
  logistics-network:
    name: logistics-network

volumes:
  logistics-mongo-data:
    name: logistics-mongo-data
  logistics-mongo-config:
    name: logistics-mongo-config
  html:
    name: html
  vhostd:
    name: vhostd
